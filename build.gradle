plugins {
    id 'java'
}

compileTestJava {
    sourceCompatibility = 17
    targetCompatibility = 17
    options.compilerArgs += "-parameters"
}

group 'com.company'
version '1.0-SNAPSHOT'

test {
    useTestNG() {
        if (project.hasProperty("groups")) {
            includeGroups "$groups"
        }
        if (project.hasProperty("excludedGroups")) {
            excludeGroups "$excludedGroups"
        }
    }

    scanForTestClasses = false

    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }

    systemProperties System.properties

    if (project.hasProperty("parallel")) {
        maxParallelForks = Runtime.runtime.availableProcessors()
    }

    if (project.hasProperty("suite")) {
        suites "$suite"
    }

    if (project.hasProperty("excludeTests")) {
        "$excludeTests".split(",").each { excludeTests ->
            exclude excludeTests
        }
    }

    ext.failedTests = []

    tasks.withType(Test) {
        afterTest { TestDescriptor descriptor, TestResult result ->
            if (result.resultType == org.gradle.api.tasks.testing.TestResult.ResultType.FAILURE) {
                failedTests << ["${descriptor.className}::${descriptor.name}"]
            }
        }
    }

    gradle.buildFinished {
        if (!failedTests.empty) {
            println "Failed test(s) for ${project.name}:"
            failedTests.each { failedTest ->
                println failedTest
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

ext {
    slf4jVersion  = "2.0.6"
    logbackVersion  = "1.4.5"
    seleniumVersion  = "4.8.0"
    testNgVersion = "7.7.1"
    assertjVersion  = "3.24.2"
    wdmVersion = "5.3.2"
    cucumberVersion = "7.11.0"
}

dependencies {
    implementation("org.slf4j:slf4j-api:${slf4jVersion}")
    implementation("ch.qos.logback:logback-classic:${logbackVersion}")

    testImplementation("org.seleniumhq.selenium:selenium-java:${seleniumVersion}")
    testImplementation("org.testng:testng:${testNgVersion}")
    testImplementation("org.assertj:assertj-core:${assertjVersion}")
    testImplementation("io.github.bonigarcia:webdrivermanager:${wdmVersion}")
    testImplementation("io.cucumber:cucumber-java:${cucumberVersion}")
    testImplementation("io.cucumber:cucumber-testng:${cucumberVersion}")
}

